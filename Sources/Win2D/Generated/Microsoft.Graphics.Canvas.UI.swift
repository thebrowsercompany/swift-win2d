// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.ui.canvascreateresourcesreason)
public typealias CanvasCreateResourcesReason = __x_ABI_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.ui.canvascreateresourceseventargs)
public final class CanvasCreateResourcesEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_Graphics_Canvas_UI.ICanvasCreateResourcesEventArgs
    private typealias CABI = __x_ABI_CMicrosoft_CGraphics_CCanvas_CUI_CICanvasCreateResourcesEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CGraphics_CCanvas_CUI_CICanvasCreateResourcesEventArgs>?) -> CanvasCreateResourcesEventArgs? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    private static let _ICanvasCreateResourcesEventArgsFactory: __ABI_Microsoft_Graphics_Canvas_UI.ICanvasCreateResourcesEventArgsFactory = try! RoGetActivationFactory(HString("Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs"))
    public init(_ createResourcesReason: CanvasCreateResourcesReason) {
        super.init(try! Self._ICanvasCreateResourcesEventArgsFactory.CreateImpl(createResourcesReason))
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.ui.canvascreateresourceseventargs.trackasyncaction)
    public func trackAsyncAction(_ action: WindowsFoundation.AnyIAsyncAction!) throws {
        try _default.TrackAsyncActionImpl(action)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.ui.canvascreateresourceseventargs.gettrackedaction)
    public func getTrackedAction() throws -> WindowsFoundation.AnyIAsyncAction! {
        try _default.GetTrackedActionImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.ui.canvascreateresourceseventargs.reason)
    public var reason : CanvasCreateResourcesReason {
        get { try! _default.get_ReasonImpl() }
    }

    deinit {
        _default = nil
    }
}

extension Win2D.CanvasCreateResourcesReason {
    public static var firstTime : Win2D.CanvasCreateResourcesReason {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason_FirstTime
    }
    public static var newDevice : Win2D.CanvasCreateResourcesReason {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason_NewDevice
    }
    public static var dpiChanged : Win2D.CanvasCreateResourcesReason {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason_DpiChanged
    }
}
extension Win2D.CanvasCreateResourcesReason: @retroactive Hashable, @retroactive Codable {}

